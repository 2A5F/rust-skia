name: 'Rust Skia'
on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-2019, macOS-10.15, ubuntu-20.04]
        edition: [stable, beta]
        include:
          - os: 'windows-2019'
            host-os: 'Windows'

          - os: 'macOS-10.15'
            host-os: 'macOS'

          - os: 'ubuntu-20.04'
            host-os: 'Linux'

      fail-fast: true

    steps:
    - uses: actions/checkout@v2
      with:
        # depth 1 is default
        submodules: true

    - name: Install Rust
      uses: hecrj/setup-rust-action@master
      with:
        rust-version: ${{ matrix.rust }}

    - name: Install Clippy
      run: |
        rustup component add clippy
      shell: bash

    - name: Setup Python 2 (Windows only)
      uses: actions/setup-python@v2
      with:
        python-version: '2.7.18'
        architecture: 'x64'
      if: runner.os == 'Windows'

    # remove LLVM on macOS so that only Apple's clang is used
    - name: Remove LLVM (macOS)
      run: |
        brew uninstall llvm
      if: runner.os == 'macOS'

    - name: LLVM (Windows only)
      run: |
        choco install llvm
      if: runner.os == 'Windows'

    - name: Python Version (Windows only)
      run: |
        python --version
      if: runner.os == 'Windows'

    - name: 'Build on ${{ matrix.host-os }} Host with Host Target ${{ matrix.host-target }}'
      if: runner.os == 'Linux'
      uses: ./.github/actions/build-linux
      with:
        host-os: ${{ matrix.host-os }}
        rust-edition: ${{ matrix.edition }}

    - name: 'Build on ${{ matrix.host-os }} Host with Host Target ${{ matrix.host-target }}'
      if: runner.os == 'Windows'
      uses: ./.github/actions/build-windows
      with:
        host-os: ${{ matrix.host-os }}
        rust-edition: ${{ matrix.edition }}
  
    - name: 'Build on ${{ matrix.host-os }} Host with Host Target ${{ matrix.host-target }}'
      if: runner.os == 'macOS'
      uses: ./.github/actions/build-macos
      with:
        host-os: ${{ matrix.host-os }}
        rust-edition: ${{ matrix.edition }}
  
  rustfmt:
    name: Check Rust Formatting
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
          submodules: true
      - name: Install Rust
        run: |
          rustup update stable
          rustup default stable 
          rustup component add rustfmt
      - name: Generate missing bindings.rs file
        run: |
          echo > skia-bindings/src/bindings.rs
      - run: | 
          cargo fmt -- --check
